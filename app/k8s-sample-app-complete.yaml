apiVersion: v1
kind: Namespace
metadata:
  name: cloud-testing-env
  labels:
    istio-injection: enabled
    backstage.io/kubernetes-id: k8s-sample-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-sample-app-deployment
  namespace: cloud-testing-env
  labels:
    app: k8s-sample-app
    version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-sample-app
  template:
    metadata:
      labels:
        app: k8s-sample-app
        version: "1.0.0"
    spec:
      containers:
        - name: k8s-sample-app
          image: docker.io/pavelzagalsky/k8s-sample-app:latest
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-sample-app-service
  namespace: cloud-testing-env
spec:
  selector:
    app: k8s-sample-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: k8s-sample-app-virtualservice
  namespace: cloud-testing-env
spec:
  gateways:
  - k8s-sample-app-gw
  hosts:
  - '*'
  http:
  - match:
      - uri:
          prefix: /fibonacci
    route:
      - destination:
          host: k8s-sample-app-service.cloud-testing-env.svc.cluster.local
          port:
            number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: k8s-sample-app-gw
  namespace: cloud-testing-env
spec:
  selector:
    istio: ingressgateway # use Istio's default ingress gateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - '*'
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ingressgateway
  namespace: istio-system
spec:
  type: LoadBalancer
  selector:
    app: istio-ingressgateway
  ports:
    - name: http2
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443
